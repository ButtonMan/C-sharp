//+---------------------------------------------------------------------------+
/*  Задание 7. Создать класс для работы с двумерным массивом вещественных
 *  чисел. Разработать следующие функциональные члены класса:
 *  1. Поля:
 *  · double [][] doubelArray;
 *  2. Конструктор, позволяющий создать ступенчатый массив.
 *  3. Методы, позволяющие:
 *  · ввести элементы массива с клавиатуры;
 *  · вывести элементы массива на экран;
 *  · отсортировать элементы каждой строки массива в порядке убывания.
 *  4. Свойство:
 *  · возвращающее общее количество элементов в массиве (доступное только для
 *  чтения);
 *  · позволяющее увеличить значение всех элементов массива на скаляр (доступное
 *  только для записи).
 *  5. Двумерный индексатор, позволяющий обращаться к соответствующему элементу
 *  массива.
 *  6. Перегрузку:
 * · операции ++ (--): одновременно увеличивает (уменьшает) значение всех
 * элементов массива на 1;
 * · констант true и false: обращение к экземпляру класса дает значение true, если
 * каждая строка массива упорядочена по возрастанию, иначе false.
 * · операции преобразования класса массив в ступенчатый массив (и наоборот)
 * Продемонстрировать работу класса.
 */
//+---------------------------------------------------------------------------+



using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;



namespace Hometask_7
{
    class Program
    {
        static void Main(string[] args)
        {
            //ТЕСТИРОВАНИЕ МЕТОДОВ КЛАССА DoubleArray:
            //+---------------------------------------------------------------+

            //Создание объекта класса
            DoubleArray doubleArray = new DoubleArray(2, 3, 2);

            //Ввод значений элементов массива с клавиатуры
            doubleArray.Set();

            //Вывод элементов массива на экран
            Console.Clear();
            Console.WriteLine("Вывод массива на экран");
            doubleArray.Show();
            Console.WriteLine();

            //Сортировка элементов каждой строки массива в порядке убывания
            Console.WriteLine("Сортировка массива: ");
            doubleArray.Sort();
            doubleArray.Show();
            Console.WriteLine();

            //Определяет общее количество элементов в массиве
            Console.WriteLine("Oбщее количество элементов в массиве: ");
            Console.WriteLine(doubleArray.NumberOfElements);
            Console.WriteLine();

            //Увеличение значений массива на скаляр
            Console.WriteLine("Увеличение значение массива на скаляр, равный "+
                "\"2\": ");
            doubleArray.Scalar = 2;
            doubleArray.Show();
            Console.WriteLine();

            //Обращение к элементу через индексатор
            Console.WriteLine("Отображения нулевого элемента первой строки" +
                "с помощью индексатора");
            Console.WriteLine("doubleArray[0, 0] = {0}", doubleArray[0, 0]);
            Console.WriteLine();

            //Тестирование перегруженного оператора ++
            Console.WriteLine("Тестирование перегруженного оператора ++");
            ++doubleArray;
            doubleArray.Show();
            Console.WriteLine();

            //Тестирование перегруженного оператора --
            Console.WriteLine("Тестирование перегруженного оператора --");
            --doubleArray;
            doubleArray.Show();
            Console.WriteLine();

            //Тестирование перегруженного оператора true / false
            Console.WriteLine("Тестирование перегруженного оператора true / " +
                "false");
            Console.WriteLine("Is doubleArray sorted? => {0}", (doubleArray)?
                true:false);


        }
    }
}
